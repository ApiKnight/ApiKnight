name: Deploy React App to GitHub Pages

on:
  [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3 # 使用最新的checkout版本

      - name: Use Node.js
        uses: actions/setup-node@v3 # 使用最新的setup-node版本
        with:
          node-version: '20' # 统一使用Node.js 20版本
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get Branch Name
        shell: bash
        run: echo "${GITHUB_REF#refs/heads/}" > branch-name.txt

      - name: Install Dependencies
        run: |
          git clean -fdx
          pnpm install

      - name: ESlint check
        run: pnpm run lint-strict:fix

      - name: Vitest
        run: pnpm test:vitest

      - name: Build the project
        run: pnpm run build

      - name: Install Playwright Browsers
        working-directory: ApiKnightFront # 设置工作目录，避免多次cd
        run: npx playwright install --with-deps

      - name: Start server for testing the built app
        run: |
          pnpm run preview & # 在后台运行预览服务器
          echo "Preview app started"
          sleep 12 # 等待服务器启动

      - name: Run Playwright tests
        run: pnpm run test

      - name: Kill Server Process
        if: always() # 无论前面的步骤是否成功都执行
        run: |
          pkill -f "pnpm run preview" # 使用pkill根据进程名结束进程，更可靠
          echo "Server process killed"

      - name: Upload Playwright report artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: success() && github.event_name == 'push' && $(cat branch-name.txt) == 'main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./ApiKnightFront/dist
          target_branch: gh-pages

      - name: SSH to server and run deployment script
        uses: appleboy/ssh-action@master
        if: success() && github.event_name == 'push' && $(cat branch-name.txt) == 'main'
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASS }}
          script: |
            cd /home/ubuntu/ApiKnight/dist
            git pull origin gh-pages
            chmod -R 777 ./